# -*- coding: utf-8 -*-
"""Covid_analysis_and_visualization.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EZKionlw92hRzBqZkiwh0emcp2c85Qbo
"""

import pandas as pd #Data analysis and manipulation
import matplotlib.pyplot as plt #Data visualization

import plotly.offline as py
py.init_notebook_mode(connected=True)#display the plot on the notebook when the kernel is running
import plotly.graph_objs as go
import plotly.express as px

import plotly.io as pio
pio.renderers.default='colab' #to intialize plotly since it consumes a lot of computing power, so the default mode is off in Google Colab.

from google.colab import files
files.upload()

df1=pd.read_csv("covid.csv")
df1.head()

from google.colab import files
files.upload()

df2=pd.read_csv("covid_grouped.csv")
df2.head()

df2.tail()

df1.columns

df1.drop(['NewCases','NewDeaths','NewRecovered'],axis=1,inplace=True)

df1

from plotly.figure_factory import create_table
table=create_table(df1.head(10),colorscale="twilight")
table

df1.columns

px.bar(df1.head(10),x='Country/Region',y= 'TotalCases',color= 'TotalCases',height=500,hover_data=['Country/Region', 'Continent'])

px.bar(df1.head(10),x='Country/Region',y= 'TotalDeaths',color= 'TotalDeaths',height=500,hover_data=['Country/Region', 'Continent'])

px.bar(df1.head(10),x='Country/Region',y= 'TotalRecovered',color= 'TotalCases',height=500,hover_data=['Country/Region', 'Continent'])

px.bar(df1.head(10),x='TotalTests',y= 'Country/Region',color='TotalTests',orientation="h",height=500,hover_data=['Country/Region', 'Continent'])

px.bar(df1.head(10),x='TotalTests',y= 'Continent',color='TotalTests',orientation="h",height=500,hover_data=['Country/Region', 'Continent'])

#px.scatter,x,y,size,color,hover_data,size_max,log_x,log_y
df1.columns

px.scatter(df1.head(50),x='Continent',y='TotalCases',hover_data=['Country/Region'],color='TotalCases',size='TotalCases',size_max=80)

px.scatter(df1.head(50),x='Continent',y='TotalCases',hover_data=['Country/Region'],color='TotalCases',size='TotalCases',size_max=80,log_y=True)

px.scatter(df1.head(50),x='Continent',y='TotalTests',hover_data=['Country/Region'],color='TotalTests',size='TotalTests',size_max=80)

px.scatter(df1.head(50),x='Continent',y='TotalTests',hover_data=['Country/Region'],color='TotalTests',size='TotalTests',size_max=80,log_y=True)

px.scatter(df1.head(50),x='Continent',y='TotalDeaths',hover_data=['Country/Region'],color='TotalDeaths',size='TotalDeaths',size_max=80,log_y=True)

px.scatter(df1.head(50),x='Continent',y='TotalRecovered',hover_data=['Country/Region'],color='TotalRecovered',size='TotalTests',size_max=80,log_y=True)

df1.head(10)

px.scatter(df1.head(100),x='Country/Region',y='TotalCases',hover_data=['Country/Region'],color='TotalCases',size='TotalCases',size_max=80)

px.scatter(df1.head(30),x='Country/Region',y='TotalCases',hover_data=['Country/Region'],color='Country/Region',size='TotalCases',size_max=80,log_y=True)

px.scatter(df1.head(30),x='Country/Region',y='TotalDeaths',hover_data=['Country/Region'],color='Country/Region',size='TotalDeaths',size_max=80,log_y=True)

px.scatter(df1.head(30),x='Country/Region',y='Tests/1M pop',hover_data=['Country/Region','Countries'],color='Country/Region',size='Tests/1M pop',size_max=80)

px.scatter(df1.head(30),x='Country/Region',y='Tests/1M pop',hover_data=['Country/Region','Continent'],color='Tests/1M pop',size='Tests/1M pop',size_max=80)

px.scatter(df1.head(30),x='TotalCases',y='TotalDeaths',hover_data=['Country/Region','Continent'],color='TotalDeaths',size='TotalDeaths',size_max=80,log_x=True,log_y=True)

px.scatter(df1.head(30),x='TotalTests',y='TotalCases',hover_data=['Country/Region','Continent'],color='TotalTests',size='TotalTests',size_max=80,log_x=True,log_y=True)

df2.columns

